name: Get Detail

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - detail
env:
  COUNTRY_CODE: ${{ github.event.client_payload.country_code }}

jobs:
  pre:
    name: Pre
    timeout-minutes: 1
    runs-on: ubuntu-latest
    outputs:
      articles_with_github_image: ${{ steps.articles_with_github_image.outputs.value }}
    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/${{ env.COUNTRY_CODE }}-data
          path: src/databases/data
          token: ${{ secrets.GH_PAT }}

      - name: Pull again
        run: npm run data:update

      - name: Check auth github
        id: created-articles
        run: node src/functions/githubAuth.js

      - name: Push
        working-directory: src/databases/data
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m ':white_check_mark: Auth github'
          git push origin main -f

      - name: Get articles with github image
        id: articles_with_github_image
        run: |
          node src/functions/getArticlesWithGitHubImage.js                   
          echo "value=$(cat .temp/articlesWithGitHubImage.json)" >> $GITHUB_OUTPUT

  run:
    name: Run ${{ matrix.code }}
    if: needs.pre.outputs.articles_with_github_image != '[]'
    runs-on: ubuntu-latest
    needs: [pre]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.pre.outputs.articles_with_github_image) }}

    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Get Detail
        run: npm run get:detail
        env:
          META_ARTICLE: ${{ toJSON(matrix) }}

      - name: Download all images
        id: download-images
        continue-on-error: true
        run: |
          IMAGE_URLS=$(grep -oP '!\[.*?\]\(\K.*?(?=\))' .temp/${{ matrix.code }}.md | grep -v 'github.com')
          if [ -n "$IMAGE_URLS" ]; then
            echo "$IMAGE_URLS" | while read -r url; do
              curl -L -o ".temp/image.temp" "$url"
              NAME=$(echo -n "$url" | md5sum | awk '{ print $1 }' | xargs)
              EXT=$(file --mime-type -b ".temp/image.temp" | awk -F'/' '{print $2}')
              mv ".temp/image.temp" ".temp/$NAME.$EXT"
            done
          else
            echo "No image URLs found for ${{ matrix.code }}"
          fi

      - name: Check on failures
        if: steps.download-images.outcome != 'success'
        run: mv .temp/${{ matrix.code }}.md .temp/${{ matrix.code }}.md.pass

      - name: Convert Webp to Jpeg
        run: node src/functions/converter.js

      - name: Prepare temp folder
        run: rm -rf .temp/.keep && mv .temp temp

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.code }}
          path: temp/
          if-no-files-found: warn

  after:
    name: After
    needs: [pre, run]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/${{ env.COUNTRY_CODE }}-data
          path: src/databases/data
          token: ${{ secrets.GH_PAT }}

      - name: Download from artifact
        uses: actions/download-artifact@v4
        with:
          path: .temp
          merge-multiple: true

      - name: Move pass file
        continue-on-error: true
        run: mkdir .temp-pass && mv .temp/*.md.pass .temp-pass/

      - name: Upload detail image
        run: node src/functions/githubUploadDetailImage.js

      - name: Move pass back
        continue-on-error: true
        run: |
          find .temp-pass -type f -name '*.md.pass' -exec sh -c 'mv "$0" "${0%.pass}"' {} \; 
          mv .temp-pass/*.md .temp/

      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: CltnApi/dtl${{ env.COUNTRY_CODE }}
          path: dtl
          ref: gh-pages
          token: ${{ secrets.GH_PAT }}

      - name: Move file
        run: rm -rf .temp/.keep && cp .temp/* dtl/

      - name: Push
        working-directory: dtl
        run: |
          git status
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m ':white_check_mark: Finish Detail'
          git push origin gh-pages

      - name: Pull again
        run: npm run data:update

      - name: Update Article
        run: node src/functions/updateFinishArticle.js

      - name: Push
        working-directory: src/databases/data
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m ':white_check_mark: Auth github'
          git push origin main
