name: 02 - Get Meta Core

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - meta-core-*
env:
  COUNTRY_CODE: ${{ github.event.client_payload.country_code }}

jobs:
  pre:
    name: Pre
    timeout-minutes: 1
    runs-on: ubuntu-latest
    outputs:
      created-articles: ${{ steps.created-articles.outputs.value }}
    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/${{ env.COUNTRY_CODE }}-data
          path: src/databases/data
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Get list created articles
        id: created-articles
        run: |
          node src/functions/getCreatedArticles.js
          echo "value=$(cat .temp/createdArticles.json)" >> $GITHUB_OUTPUT

      - name: Echo value
        run: echo '${{ steps.created-articles.outputs.value }}'

  run:
    name: Run ${{ matrix.code }}
    if: needs.pre.outputs.created-articles != '[]'
    runs-on: ubuntu-latest
    needs: [pre]
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJson(needs.pre.outputs.created-articles) }}

    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run meta
        run: echo $CREATED_ARTICLE && npm run get:meta
        env:
          CREATED_ARTICLE: ${{ toJson(matrix) }}

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.code }}
          path: .temp/${{ matrix.code }}.json
          if-no-files-found: warn

  after:
    name: After
    needs: [run]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout crawl
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/nodejs-clutter
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          token: ${{ secrets.GH_PAT }}
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: cache-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          repository: ClutterNews/${{ env.COUNTRY_CODE }}-data
          path: src/databases/data
          token: ${{ secrets.GH_PAT }}

      - name: Download from artifact
        uses: actions/download-artifact@v4
        with:
          path: .temp
          merge-multiple: true

      - name: Pull again
        run: npm run data:update

      - name: Store links
        run: node src/functions/updateMetaArticle.js

      - name: Push
        working-directory: src/databases/data
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m ':white_check_mark: Meta'
          git push origin main -f

  trigger:
    name: Trigger
    if: always()
    needs: [pre, run, after]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Meta Image
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.github.com/repos/cltnp/p/dispatches'
          method: 'POST'
          customHeaders: '{"Accept": "application/vnd.github+json", "Authorization": "Bearer ${{ secrets.GH_PAT }}", "X-GitHub-Api-Version": "2022-11-28"}'
          data: '{"event_type": "meta-image-${{ env.COUNTRY_CODE }}", "client_payload": ${{ toJson(github.event.client_payload) }}}'
